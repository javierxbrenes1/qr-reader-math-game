{"version":3,"sources":["components/hooks/useLocalStorage.js","components/questionOptions.js","components/alert.js","components/questionDetail.js","components/spinner.js","components/cardContainer.js","components/questionHeader.js","components/question.js","components/zone.js","components/fireBaseConfig.js","App.js","index.js"],"names":["useLocalStorage","key","initialValue","_useState","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","_useState2","Object","slicedToArray","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","QuestionOptions","_ref","options","onClick","optionChecked","setOption","comps","map","r","react_default","a","createElement","optionId","className","type","name","id","concat","Fragment","e","target","classList","contains","Alert","title","message","QuestionDetail","quesAnswer","quesDes","quesOptions","group","ques","_useLocalStorage","_useLocalStorage2","questionsAnswered","setQuestionsAnswered","didAnswer","answer","setAnswer","components_alert","style","width","role","aria-label","questionOptions","push","Spinner","CardContainer","children","QuestionHeader","params","fireBaseDB","loading","failed","question","setQuestion","useEffect","path","ref","once","then","snapshot","val","objectSpread","questionData","undefined","cardContainer","spinner","questionDetail","assign","withRouter","match","filter","length","questionHeader","Zone","react_router","components_question","FireBaseInit","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","dataBase","react_router_dom","zone","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c001889d.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n   console.log(storedValue);\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n       \r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n  \r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useLocalStorage;","import React, {useState} from 'react'\r\n\r\nconst QuestionOptions = ({options, onClick}) => {\r\nconst [optionChecked, setOption] = useState('');\r\n\r\nconst onClickOption = (e) =>{\r\n    if(e.target.classList.contains('options')){\r\n        setOption(e.target.value);\r\n    }\r\n}\r\n\r\nconst onClickButton = () => {\r\n    onClick(optionChecked);\r\n}\r\n\r\n    var comps = options.map(r => (<div key={r.optionId} className=\"ml-3 p-3\">\r\n                                    <label className=\"form-check-label\">\r\n                                        <input type=\"radio\" className=\"form-check-input options\" value={r.optionId} name=\"options\" id={`option${r.optionId}`}  />\r\n                                        {\r\n                                            r.type === \"text\" ? <span>{r.value}</span> : null\r\n                                        }\r\n                                    </label>\r\n                                  </div>));\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <fieldset className=\"form-group\" onClick={onClickOption}>\r\n            <legend>Opciones</legend>\r\n            {comps}\r\n        </fieldset>\r\n        <div className=\"text-right\">\r\n            <input type=\"button\" className=\"btn btn-primary btn-lg\" value=\"Aceptar\" onClick={onClickButton}/>\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default QuestionOptions\r\n","import React from 'react'\r\n\r\nconst Alert = ({type, title, message}) => {\r\n  return (\r\n    <div className={`alert alert-dismissible alert-${type}`}>\r\n    <h4 className=\"alert-heading\">{title}</h4>\r\n    <p className=\"mb-0\">{message}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React, {useState} from 'react';\r\nimport QuestionOptions from './questionOptions';\r\nimport Alert from './alert';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\n\r\nconst QuestionDetail = ({ quesAnswer,quesDes,quesOptions, group, ques }) => {\r\n    const [questionsAnswered, setQuestionsAnswered] = useLocalStorage('questionsAnswered', [])\r\n    const [answer, setAnswer] = useState({\r\n        didAnswer: false, \r\n        optionChecked: ''\r\n    });\r\n    \r\n\r\n    const onClickResponse = (value) => {\r\n        questionsAnswered.push({\r\n            group, ques\r\n        });\r\n        setQuestionsAnswered(questionsAnswered);\r\n        setAnswer({didAnswer: true, optionChecked: value});\r\n    }\r\n\r\n    if(answer.didAnswer)\r\n    {\r\n        if(answer.optionChecked === quesAnswer){\r\n            return <Alert type=\"success\" \r\n            title=\"En hora buena 😃\"\r\n            message=\"Tu respuesta fue correcta, sigue demostrando tus habilidades 👌.\" />\r\n        }else{\r\n            return <Alert type=\"danger\" title=\"uppps 🙁\" message=\"Tu respuesta fue incorrecta, mejor suerte para la proxima 👍.\" />\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <React.Fragment>\r\n        <div className=\"card border-primary mb-3\" style={{width: '35rem'}}>\r\n            <div className=\"card-header h3 text-center\"><span role=\"img\" aria-label=\"Thinker\">🤔</span> {quesDes}</div>\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Selecciona tu respuesta <span role=\"img\" aria-label=\" Check\">✔️</span></h4>\r\n                <QuestionOptions options={quesOptions} onClick={onClickResponse}/>\r\n            </div>\r\n        </div> \r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default QuestionDetail;","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Espera mientras se carga tu pregunta...</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react'\r\n\r\nconst CardContainer = ({children}) => {\r\n    return (<div className=\"container-fluid\">\r\n    <div className=\"row\">\r\n        <div className=\"col-12\">\r\n            <div className=\"d-flex justify-content-center mt-5\">\r\n               {children}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>);\r\n}\r\n\r\nexport default CardContainer\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useState, useEffect} from 'react'\r\nimport QuestionDetail from './questionDetail';\r\nimport Spinner from './spinner';\r\nimport Alert from './alert';\r\nimport CardContainer from './cardContainer';\r\n\r\nconst QuestionHeader = ({params, fireBaseDB}) => {\r\n    const [question, setQuestion] = useState({\r\n        loading: true,\r\n        failed: false, \r\n        quesAnswer: '',\r\n        quesDes: '',\r\n        quesOptions:[]\r\n    })\r\n    \r\n    useEffect(() => {\r\n        const path = `/app/groups/${params.group}`;\r\n        fireBaseDB.ref(path).once('value').then(snapshot => {\r\n            if(snapshot.val() === null)\r\n            {\r\n                setQuestion({\r\n                    ...question,loading: false, failed: true\r\n                }); \r\n    \r\n            }\r\n            else{\r\n            var questionData = snapshot.val()[params.ques];\r\n    \r\n            if(questionData === undefined || questionData === null){\r\n                setQuestion({\r\n                    ...question,loading: false, failed: true\r\n                });\r\n            }else{\r\n                setQuestion({\r\n                    ...questionData, loading: false, failed: false, \r\n                });\r\n            }\r\n        }\r\n        })\r\n    }, []);\r\n    \r\n        return (<CardContainer>\r\n                                {question.loading \r\n                                ? <div className=\"h3\">\r\n                                    <Spinner />\r\n                                </div> \r\n                                : question.failed \r\n                                ? <Alert type=\"light\" title=\"Ups.!\" message=\"La pregunta no pudo ser encontrada.\" />  \r\n                                : <QuestionDetail { ...question } {...params}/> }\r\n                </CardContainer>);\r\n}\r\n\r\nexport default QuestionHeader\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\nimport QuestionHeader from './questionHeader';\r\nimport Alert from './alert';\r\nimport CardContainer from './cardContainer';\r\nconst Question = ({match, fireBaseDB}) => {\r\n    const [questionsAnswered] = useLocalStorage('questionsAnswered', []);\r\n    const {params} = match;\r\n    const result = (questionsAnswered.filter(r => r.group === params.group && r.ques === params.ques).length === 0);\r\n\r\n\r\n    if(result) return <QuestionHeader fireBaseDB={fireBaseDB} params={params}/>\r\n    return (<CardContainer><Alert type=\"light\" \r\n    title=\"Pregunta respondida 😝\"\r\n    message=\"Esta pregunta ya ha sido respondida.\" /></CardContainer>);\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Question);","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Question from './question';\r\n\r\nconst Zone = ({fireBaseDB}) =>  {\r\n\r\n    return (<Route path=\"/:group?/:ques?\">\r\n            <Question fireBaseDB={fireBaseDB}/>\r\n        </Route>);\r\n\r\n}\r\n\r\nexport default Zone;","import * as firebase from 'firebase';\r\n\r\nconst FireBaseInit = () =>\r\n{\r\n    var firebaseConfig = {\r\n        apiKey: \"AIzaSyA0_QZHdFSdqdrj8u5KTtpxkwH6qsfdyz0\",\r\n        authDomain: \"math-game-8294f.firebaseapp.com\",\r\n        databaseURL: \"https://math-game-8294f.firebaseio.com\",\r\n        projectId: \"math-game-8294f\",\r\n        storageBucket: \"math-game-8294f.appspot.com\",\r\n        messagingSenderId: \"254817267920\",\r\n        appId: \"1:254817267920:web:182ce1fcc2004057\"\r\n      };\r\n\r\n      firebase.initializeApp(firebaseConfig);\r\n\r\n      return firebase.database();\r\n\r\n}\r\n\r\n\r\nexport default FireBaseInit;","import React,{useState} from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Zone from './components/zone';\nimport FireBaseInit from './components/fireBaseConfig';\n\nimport './App.css';\n\n\nconst App = () => {\n  \nvar dataBase = FireBaseInit();\n\n  return (\n    <Router>\n      <Zone fireBaseDB={dataBase}/>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}