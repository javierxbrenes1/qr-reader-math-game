{"version":3,"sources":["components/spinner.js","components/adminGroupWrapper.js","components/mathSymbolWrapper.js","components/mathSymbolWrapperText.js","components/questionOptionItem.js","components/adminPieInfo.js","components/adminQuestionDetailItem.js","components/adminQuestionDetail.js","components/adminDetails.js","components/admin.js","components/alert.js","components/questionOptions.js","components/questionDetail.js","components/cardContainer.js","components/questionHeader.js","components/question.js","components/fireBaseConfig.js","App.js","index.js"],"names":["Spinner","react_default","a","createElement","className","role","AdminGroupWrapper","_ref","desc","children","id","headerId","concat","collapseId","accordionId","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","MathSymbolWrapper","value","react_mathjax2_lib_default","Context","Node","inline","MathSymbolWrapperText","input","Text","text","QuestionOptionItem","question","withInput","p","ml","type","optionId","name","style","textWeight","mathSymbolWrapper","mathSymbolWrapperText","defaultProps","AdminPieInfo","answers","undefined","answersAsArray","Array","from","Object","keys","t","groups","groupBy","correctas","length","incorrectas","width","height","margin","dist_default","data","title","color","animate","lineWidth","paddingAngle","rounded","label","labelStyle","fontSize","fontFamily","labelPosition","React","memo","quesDes","answer","options","optionsComp","useMemo","map","r","index","questionOptionItem","key","overflow","ReactHtmlParser","transform","node","attribs","toUpperCase","adminPieInfo","AdminQuestionDetail","answerDetails","questionAsArray","orderBy","filter","k","objectSpread","quesId","shortestId","parseInt","replace","console","log","questionItems","adminQuestionDetailItem","quesAnswer","quesOptions","Fragment","AdminDetails","questions","groupElements","obj","adminGroupWrapper","adminQuestionDetail","Admin","fireBaseDB","_useState","useState","_useState2","slicedToArray","loading","setLoading","_useState3","_useState4","setQuestions","_useState5","_useState6","setAnswers","useEffect","ref","once","then","snapshot","val","on","entries","spinner","adminDetails","Alert","message","QuestionOptions","onClick","optionChecked","setOption","notOptionChecked","setNotOptionChecked","comps","e","target","classList","contains","components_alert","QuestionDetail","group","ques","didAnswer","setAnswer","aria-label","questionOptions","response","child","push","update","CardContainer","QuestionHeader","params","failed","setQuestion","path","questionData","cardContainer","questionDetail","assign","withRouter","match","questionHeader","FireBaseInit","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","dataBase","react_router_dom","basename","process","react_router","exact","components_question","admin","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0c84a7cf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Espera mientras se carga tu pregunta...</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react'\r\n\r\nconst AdminGroupWrapper = ({desc, children, id}) => {\r\n    const headerId=`heading${id}`;\r\n    const collapseId = `collapse${id}`\r\n    const accordionId = `accordion${id}`\r\n  return (\r\n      <div className=\"col-12 mt-4\">\r\n        <div id={accordionId}>\r\n         <div className=\"card\">\r\n            <div className=\"card-header\" id={headerId}>\r\n                    <h3>\r\n                        <button className=\"btn btn-link\" data-toggle=\"collapse\" data-target={`#${collapseId}`} aria-expanded=\"true\" aria-controls={collapseId}>\r\n                            {desc}\r\n                        </button>\r\n                    </h3>\r\n            </div>\r\n            <div id={collapseId} className=\"collapse show\" aria-labelledby={headerId} data-parent={`#${accordionId}`}>\r\n                    <div className=\"card-body bg-light\">\r\n                        <div className=\"row\">\r\n                            {children}\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminGroupWrapper\r\n","import React from 'react'\r\nimport MathJax from 'react-mathjax2';\r\n\r\nconst MathSymbolWrapper = ({value}) => {\r\n  return (\r\n    <MathJax.Context> \r\n    <MathJax.Node inline>{value}</MathJax.Node>\r\n</MathJax.Context>\r\n  )\r\n}\r\n\r\nexport default MathSymbolWrapper\r\n","import React from 'react'\r\nimport MathJax from 'react-mathjax2';\r\n\r\nconst MathSymbolWrapperText = ({value}) => {\r\n  return (\r\n    <MathJax.Context \r\n     input='ascii'> \r\n    <MathJax.Text text={value}/>\r\n</MathJax.Context>\r\n  )\r\n}\r\n\r\nexport default MathSymbolWrapperText","import React from 'react'\r\nimport MathSymbolWrapper from './mathSymbolWrapper'\r\nimport MathSymbolWrapperText from './mathSymbolWrapperText';\r\n\r\nconst QuestionOptionItem = ({question, withInput, p, ml}) => {\r\n\r\n    const {type, value, optionId} = question;\r\n  return (\r\n        <div className={`ml-${ml} p-${p}`}>\r\n            <label className=\"form-check-label d-flex\">\r\n               { !withInput ? <span className=\"pr-3\">Opción {optionId}: </span> : <input  type=\"radio\" className=\"form-check-input options align-self-center\" value={optionId} name=\"options\" id={`option${optionId}`}  />}\r\n                <div className=\"align-self-center\" style={{textWeight: 'bold'}}>\r\n                { type === 'text' ? <span>{value}</span> : type==='math' ? <MathSymbolWrapper value={value} /> : <MathSymbolWrapperText value={value} />}\r\n                </div>\r\n            </label>\r\n        </div>\r\n  )\r\n}\r\nQuestionOptionItem.defaultProps = {\r\n    withInput: true,\r\n    p:3,\r\n    ml:3,\r\n}\r\n\r\nexport default QuestionOptionItem\r\n","import React from 'react'\r\nimport PieChart from 'react-minimal-pie-chart';\r\nimport groupBy from 'lodash/groupBy';\r\n\r\nconst AdminPieInfo = ({answers}) => {\r\nconst indexCorrectas = 1;\r\nconst indexIncorrectas = 0;\r\n    \r\nif(answers === undefined)\r\n    return null;\r\n\r\n const answersAsArray = Array.from(Object.keys(answers), t => answers[t]);\r\n const groups = groupBy(answersAsArray, 'response');\r\n const correctas = groups[indexCorrectas] === undefined ? 0 : groups[indexCorrectas].length;\r\n const incorrectas = groups[indexIncorrectas] === undefined ? 0 : groups[indexIncorrectas].length;\r\n  return (\r\n      <div>\r\n        <div style={{width:'15em', height:'15em', margin: '0 auto'}}>\r\n        <PieChart\r\n            data={[\r\n                { title: 'Respuestas Correctas', value: correctas, color: '#269A47' },\r\n                { title: 'Respuestas Incorrectas', value: incorrectas, color: '#FF644D' },\r\n            ]}\r\n            animate\r\n            lineWidth={20}\r\n            paddingAngle={18}\r\n            rounded\r\n            label\r\n            labelStyle={{\r\n                fontSize: '15px',\r\n                fontFamily:'sans-serif'\r\n            }}\r\n            labelPosition={60}\r\n            />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminPieInfo\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useMemo} from 'react'\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport MathSymbolWrapper from './mathSymbolWrapper';\r\nimport MathSymbolWrapperText from './mathSymbolWrapperText';\r\nimport QuestionOptionItem from './questionOptionItem';\r\nimport AdminPieInfo from './adminPieInfo';\r\n\r\nconst AdminQuestionDetailItem = ({id,quesDes, answer, options, answers}) => {\r\n    const optionsComp = useMemo(() => options.map((r, index) => <QuestionOptionItem key={index} question={r} withInput={false} p={1} ml={1}/>), []);\r\n    return (\r\n        <div className=\"col-12 col-md-4\">\r\n          <div className=\"card text-white bg-dark mb-3\">\r\n              <div className=\"card-header\" style={{height: '290px', overflow:'auto' }}>\r\n              <div>\r\n                <span>Pregunta {id}</span> {ReactHtmlParser(quesDes, {transform: function(node, index) {\r\n                            if(node.type ===\"tag\" && node.name === \"mathsymbolwrapper\"){\r\n                                return <MathSymbolWrapper key={index} value={node.attribs['value']}/>\r\n                            }\r\n                            if(node.type === \"tag\" && node.name === \"mathsymbolwrappertext\" ){\r\n                                return <MathSymbolWrapperText key={index} value={node.attribs['value']} />\r\n                            }\r\n                        }\r\n                    })}\r\n                </div>\r\n                <div className=\"options mt-3\">\r\n                    {optionsComp}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Respuesta correcta: Opción {answer.toUpperCase()}</h4>\r\n                  <AdminPieInfo answers={answers}/>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(AdminQuestionDetailItem);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useMemo} from 'react'\r\nimport AdminQuestionDetailItem from './adminQuestionDetailItem';\r\nimport orderBy from 'lodash/orderBy';\r\n\r\nconst AdminQuestionDetail = ({question, answerDetails}) => {\r\n    \r\n    const questionAsArray = useMemo(() => orderBy(Array.from(Object.keys(question).filter(r=> r !== 'desc'), k => ({...question[k], quesId: k, shortestId: parseInt(k.replace('ques',''))})), ['shortestId']), []);\r\n    console.log(answerDetails);\r\n\r\n    var questionItems = questionAsArray.map(r => <AdminQuestionDetailItem \r\n                                                    key={r.shortestId} \r\n                                                    id={r.shortestId}\r\n                                                    quesDes={r.quesDes} \r\n                                                    answer={r.quesAnswer} \r\n                                                    options={r.quesOptions} \r\n                                                    answers={answerDetails[r.quesId]}/>);\r\n\r\n    return <React.Fragment>\r\n        {questionItems}\r\n    </React.Fragment>\r\n}\r\n\r\nexport default AdminQuestionDetail\r\n","import React from 'react'\r\nimport AdminGroupWrapper from './adminGroupWrapper';\r\nimport AdminQuestionDetail from './adminQuestionDetail';\r\n\r\nconst AdminDetails = ({questions, answers}) => {\r\n\r\n    const questionsKeys = Object.keys(questions);\r\n    \r\n    const groupElements = questionsKeys.map( r => {\r\n        const obj = questions[r];\r\n        return (<AdminGroupWrapper key={r} id={r}  desc={obj.desc}>\r\n                    <AdminQuestionDetail question={obj} answerDetails={answers[r]} />\r\n                </AdminGroupWrapper>);\r\n    })\r\n\r\n  return (\r\n    <div className=\"row w-100\">\r\n      {groupElements}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminDetails\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useEffect, useState} from 'react'\r\nimport Spinner from './spinner';\r\nimport AdminDetails from './adminDetails';\r\n\r\nconst Admin = ({fireBaseDB}) => {\r\n        const [loading, setLoading] = useState(true);\r\n        const [questions, setQuestions] = useState({});\r\n        const [answers, setAnswers] = useState({});\r\n\r\n   useEffect(() => {\r\n    //read the questions just once.\r\n    const path = `/app/groups`;\r\n\r\n    fireBaseDB.ref(path).once('value').then(snapshot => {\r\n        setQuestions(snapshot.val());\r\n    });\r\n    //suscribe the app to every change on groupsResults\r\n    const groupsResultsRef = fireBaseDB.ref('/app/groupsResults');\r\n    groupsResultsRef.on('value', snapshot => {\r\n        var obj = snapshot.val();\r\n        setAnswers(obj);\r\n        //console.log(obj);\r\n        //var prueba = Array.from(Object.keys(obj), k => obj[k]);\r\n        //console.log(prueba);\r\n    });\r\n    setLoading(false);\r\n   }, []);\r\n\r\n  return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n            <div className=\"col-12\">\r\n            <div className=\"d-flex justify-content-center mt-5\">\r\n                {\r\n                    loading || answers === null || answers === undefined || Object.entries(answers).length === 0 ? <Spinner /> : <AdminDetails questions={questions} answers={answers} />\r\n                }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Admin;\r\n","import React from 'react'\r\n\r\nconst Alert = ({type, title, message}) => {\r\n  return (\r\n    <div className={`alert alert-dismissible alert-${type}`}>\r\n    <h4 className=\"alert-heading\">{title}</h4>\r\n    <p className=\"mb-0\">{message}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React, {useState} from 'react'\r\nimport QuestionOptionItem from './questionOptionItem';\r\nimport Alert from './alert';\r\n\r\nconst QuestionOptions = ({options, onClick}) => {\r\nconst [optionChecked, setOption] = useState('');\r\nconst [notOptionChecked, setNotOptionChecked] = useState(false);\r\n\r\nconst onClickOption = (e) =>{\r\n    if(e.target.classList.contains('options')){\r\n        setOption(e.target.value);\r\n    }\r\n}\r\n\r\nconst onClickButton = () => {\r\n    if(optionChecked === ''){\r\n        setNotOptionChecked(true);\r\n    }else{\r\n        onClick(optionChecked);\r\n    }\r\n}\r\n\r\n  const comps = options.map(r => <QuestionOptionItem key={r.optionId} question={r} p={2}/>);\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <fieldset className=\"form-group\" onClick={onClickOption}>\r\n            <legend>Opciones</legend>\r\n            {comps}\r\n        </fieldset>\r\n        <div className=\"text-right\">\r\n            <input type=\"button\" className=\"btn btn-primary btn-lg\" value=\"Aceptar\" onClick={onClickButton}/>\r\n        </div>\r\n        {notOptionChecked ? <div className=\"mt-3\"><Alert type=\"warning\" title=\"No hay respuesta 🤨\" message=\"Debes marcar al menos una (☝️) opción para continuar.\"/></div> : null}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default QuestionOptions\r\n","import React, {useState} from 'react';\r\nimport QuestionOptions from './questionOptions';\r\nimport Alert from './alert';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport MathSymbolWrapper from './mathSymbolWrapper';\r\nimport MathSymbolWrapperText from './mathSymbolWrapperText';\r\n\r\nconst QuestionDetail = ({ quesAnswer,quesDes,quesOptions, group, ques, fireBaseDB }) => {\r\n    const [answer, setAnswer] = useState({\r\n        didAnswer: false, \r\n        optionChecked: ''\r\n    });\r\n    \r\n    const onClickResponse = (value) => {\r\n        const response = {\r\n            response: value === quesAnswer ? 1 : 0,\r\n        };\r\n        var key = fireBaseDB.ref().child(`/app/groupsResults/${group}/${ques}`).push().key;\r\n        const update = {};\r\n        update[`/app/groupsResults/${group}/${ques}/${key}`] = response;\r\n        fireBaseDB.ref().update(update);\r\n        setAnswer({didAnswer: true, optionChecked: value});\r\n    }\r\n\r\n    if(answer.didAnswer)\r\n    {\r\n        if(answer.optionChecked === quesAnswer){\r\n            return <Alert type=\"success\" \r\n            title=\"En hora buena 😃\"\r\n            message=\"Tu respuesta fue correcta, sigue demostrando tus habilidades 👌.\" />\r\n        }else{\r\n            return <Alert type=\"danger\" title=\"uppps 🙁\" message=\"Tu respuesta fue incorrecta, mejor suerte para la proxima 👍.\" />\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <React.Fragment>\r\n        <div className=\"card border-primary mb-3\" style={{width: '35rem'}}>\r\n            <div className=\"card-header\">\r\n                {ReactHtmlParser(quesDes, {transform: function(node, index) {\r\n                        if(node.type ===\"tag\" && node.name === \"mathsymbolwrapper\"){\r\n                            return <MathSymbolWrapper key={index} value={node.attribs['value']}/>\r\n                        }\r\n                        if(node.type === \"tag\" && node.name === \"mathsymbolwrappertext\" ){\r\n                            return <MathSymbolWrapperText key={index} value={node.attribs['value']} />\r\n                        }\r\n                    }\r\n                })}\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Selecciona tu respuesta <span role=\"img\" aria-label=\" Check\">✔️</span></h4>\r\n                <QuestionOptions options={quesOptions} onClick={onClickResponse}/>\r\n            </div>\r\n        </div> \r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default QuestionDetail;","import React from 'react'\r\n\r\nconst CardContainer = ({children}) => {\r\n    return (<div className=\"container-fluid\">\r\n    <div className=\"row\">\r\n        <div className=\"col-12\">\r\n            <div className=\"d-flex justify-content-center mt-5\">\r\n               {children}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>);\r\n}\r\n\r\nexport default CardContainer\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useState, useEffect} from 'react'\r\nimport QuestionDetail from './questionDetail';\r\nimport Spinner from './spinner';\r\nimport Alert from './alert';\r\nimport CardContainer from './cardContainer';\r\n\r\nconst QuestionHeader = ({params, fireBaseDB}) => {\r\n    const [question, setQuestion] = useState({\r\n        loading: true,\r\n        failed: false, \r\n        quesAnswer: '',\r\n        quesDes: '',\r\n        quesOptions:[]\r\n    })\r\n    \r\n    useEffect(() => {\r\n        const path = `/app/groups/${params.group}`;\r\n        fireBaseDB.ref(path).once('value').then(snapshot => {\r\n            if(snapshot.val() === null)\r\n            {\r\n                setQuestion({\r\n                    ...question,loading: false, failed: true\r\n                }); \r\n    \r\n            }\r\n            else{\r\n            var questionData = snapshot.val()[params.ques];\r\n    \r\n            if(questionData === undefined || questionData === null){\r\n                setQuestion({\r\n                    ...question,loading: false, failed: true\r\n                });\r\n            }else{\r\n                setQuestion({\r\n                    ...questionData, loading: false, failed: false, \r\n                });\r\n            }\r\n        }\r\n        })\r\n    }, []);\r\n    \r\n        return (<CardContainer>\r\n                                {question.loading \r\n                                ? <div className=\"h3\">\r\n                                    <Spinner />\r\n                                </div> \r\n                                : question.failed \r\n                                ? <Alert type=\"light\" title=\"Ups.! 🙄\" message=\"La pregunta no pudo ser encontrada. 🤷\" />  \r\n                                : <QuestionDetail { ...question } {...params} fireBaseDB={fireBaseDB}/> }\r\n                </CardContainer>);\r\n}\r\n\r\nexport default QuestionHeader\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n//import useLocalStorage from './hooks/useLocalStorage';\r\nimport QuestionHeader from './questionHeader';\r\n//import Alert from './alert';\r\n//import CardContainer from './cardContainer';\r\nconst Question = ({match, fireBaseDB}) => {\r\n  \r\n    const {params} = match;\r\n  \r\n  return <QuestionHeader fireBaseDB={fireBaseDB} params={params}/>\r\n  /*  return (<CardContainer><Alert type=\"light\" \r\n    title=\"Pregunta respondida 😝\"\r\n    message=\"Esta pregunta ya ha sido respondida.\" /></CardContainer>); */\r\n}\r\n\r\nexport default withRouter(Question);","import * as firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst FireBaseInit = () =>\r\n{\r\n    var firebaseConfig = {\r\n        apiKey: \"AIzaSyA0_QZHdFSdqdrj8u5KTtpxkwH6qsfdyz0\",\r\n        authDomain: \"math-game-8294f.firebaseapp.com\",\r\n        databaseURL: \"https://math-game-8294f.firebaseio.com\",\r\n        projectId: \"math-game-8294f\",\r\n        storageBucket: \"math-game-8294f.appspot.com\",\r\n        messagingSenderId: \"254817267920\",\r\n        appId: \"1:254817267920:web:182ce1fcc2004057\"\r\n      };\r\n\r\n      firebase.initializeApp(firebaseConfig);\r\n\r\n      return firebase.database();\r\n\r\n}\r\n\r\n\r\nexport default FireBaseInit;","import React from 'react';\nimport {HashRouter, Route,Switch  } from 'react-router-dom';\nimport Admin from './components/admin';\nimport Question from './components/question';\nimport FireBaseInit from './components/fireBaseConfig';\n\nimport './App.css';\n\n\nconst App = () => {\n  \nvar dataBase = FireBaseInit();\n//   basename={process.env.PUBLIC_URL}\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact={true}  path=\"/:group/:ques\">\n          <Question fireBaseDB={dataBase}/>\n        </Route>\n        <Route  path=\"/admin\">\n          <Admin fireBaseDB={dataBase}/>\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}